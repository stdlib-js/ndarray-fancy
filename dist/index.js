"use strict";var u=function(s,i){return function(){return i||s((i={exports:{}}).exports,i),i.exports}};var y=u(function(Ar,L){"use strict";var ue=/^-?[0-9]+$/;L.exports=ue});var g=u(function(Lr,V){"use strict";var le=/:/;V.exports=le});var b=u(function(Vr,T){"use strict";var ce=require("@stdlib/string-base-trim"),ve=require("@stdlib/string-base-replace"),m=require("@stdlib/slice-multi"),pe=require("@stdlib/slice-base-str2multislice"),de=require("@stdlib/slice-base-seq2multislice"),fe=require("@stdlib/slice-base-str2slice"),c=require("@stdlib/string-format"),Ee=y(),qe=g();function he(s,i){var r,a,t,n;if(a=ce(i),t=a[0],t==="S"){if(n=fe(i),n===null)throw new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",i));n=new m(n)}else if(t==="M"){if(n=pe(a),n===null)throw new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",i))}else if(Ee.test(a))n=parseInt(a,10),n=new m(n);else if(qe.test(a)){if(r=s.shape,n=de(a,r,!0),n.code)throw n.code==="ERR_SLICE_INVALID_INCREMENT"?new Error(c("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",i)):n.code==="ERR_SLICE_INVALID_ELLIPSIS"?new Error(c("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",i)):n.code==="ERR_SLICE_INVALID_SUBSEQUENCE"?new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",i)):new RangeError(c("invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",r.join(","),ve(a,/\.\.\.,/,"").split(",").length))}else if(a.length===0||a==="...")n=new m;else throw new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",i));return n}T.exports=he});var C=u(function(Tr,U){"use strict";var we=require("@stdlib/string-base-trim"),ye=require("@stdlib/string-base-replace"),x=require("@stdlib/slice-multi"),ge=require("@stdlib/slice-base-str2multislice"),D=require("@stdlib/slice-base-seq2multislice"),me=require("@stdlib/slice-base-str2slice"),l=require("@stdlib/string-format"),Ie=y();function Se(s,i,r){var a,t,n,e;if(t=we(i),n=t[0],n==="S"){if(e=me(i),e===null)throw new Error(l("invalid operation. Unsupported slice operation. Value: `%s`.",i));e=new x(e)}else if(n==="M"){if(e=ge(t),e===null)throw new Error(l("invalid operation. Unsupported slice operation. Value: `%s`.",i))}else if(Ie.test(t))e=parseInt(t,10),e=new x(e);else if(t.length>0){if(a=s.shape,e=D(t,a,!0),e.code){if(e.code==="ERR_SLICE_INVALID_INCREMENT")throw new Error(l("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",i));if(e.code==="ERR_SLICE_INVALID_ELLIPSIS")throw new Error(l("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",i));if(e.code==="ERR_SLICE_INVALID_SUBSEQUENCE")throw new Error(l("invalid operation. Unsupported slice operation. Value: `%s`.",i));if(e.code==="ERR_SLICE_TOO_MANY_DIMENSIONS")throw new RangeError(l("invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",s.shape.join(","),ye(t,/\.\.\.,/,"").split(",").length));if(e.code==="ERR_SLICE_OUT_OF_BOUNDS"){if(r)throw new RangeError(l("invalid operation. Slice exceeds array bounds. Array shape: (%s).",a.join(",")));e=D(t,a,!1)}}}else throw new RangeError(l("invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",s.shape.join(","),0));return e}U.exports=Se});var P=u(function(br,O){"use strict";var _e=require("@stdlib/string-base-trim"),Re=require("@stdlib/slice-base-str2multislice"),M=require("@stdlib/slice-base-seq2multislice"),Ne=require("@stdlib/slice-base-sargs2multislice"),f=require("@stdlib/string-format"),Ae=g();function Le(s,i,r){var a,t,n,e;if(t=_e(i),n=t[0],n==="M"){if(e=Re(t),e===null)throw new Error(f("invalid operation. Unsupported slice operation. Value: `%s`.",i))}else if(Ae.test(t)||t==="..."){if(a=s.shape,e=M(t,a,!0),e.code){if(e.code==="ERR_SLICE_INVALID_INCREMENT")throw new Error(f("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",i));if(e.code==="ERR_SLICE_INVALID_ELLIPSIS")throw new Error(f("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",i));if(e.code==="ERR_SLICE_INVALID_SUBSEQUENCE")throw new Error(f("invalid operation. Unsupported slice operation. Value: `%s`.",i));if(e.code==="ERR_SLICE_OUT_OF_BOUNDS"){if(r)throw new RangeError(f("invalid operation. Slice exceeds array bounds. Array shape: (%s).",a.join(",")));e=M(t,a,!1)}}}else if(e=Ne(t),e===null)throw new Error(f("invalid operation. Unsupported slice operation. Value: `%s`.",i));return e}O.exports=Le});var I=u(function(xr,B){"use strict";var Ve=require("@stdlib/utils-properties-in"),Te=require("@stdlib/array-base-assert-contains").factory,be=require("@stdlib/ndarray-ctor"),xe=require("@stdlib/ndarray-defaults"),De=Te(Ve(new be("generic",[0],[],[0],0,xe.get("order"))));B.exports=De});var F=u(function(Dr,j){"use strict";var Ue=require("@stdlib/assert-is-function");function Ce(s,i,r){var a=s[i];if(Ue(a))return t;return a;function t(){var n,e;for(n=[],e=0;e<arguments.length;e++)n.push(arguments[e]);return a.apply(this===r?s:this,n)}}j.exports=Ce});var S=u(function(Ur,Q){"use strict";var Me=require("@stdlib/string-base-replace");function Oe(s){return Me(s,/^invalid argument/,"invalid operation")}Q.exports=Oe});var _=u(function(Cr,G){"use strict";var Pe=require("@stdlib/assert-is-range-error"),Be=require("@stdlib/assert-is-type-error"),je=require("@stdlib/assert-is-syntax-error");function Fe(s){return Pe(s)?RangeError:Be(s)?TypeError:je(s)?SyntaxError:Error}G.exports=Fe});var X=u(function(Mr,z){"use strict";var Qe=require("@stdlib/ndarray-base-slice"),Ge=S(),ze=_();function Xe(s,i,r,a){var t,n,e;t=!1,e=a(s,i,t);try{return Qe(r,e,t,!1)}catch(o){throw n=ze(o),new n(Ge(o.message))}}z.exports=Xe});var W=u(function(Or,k){"use strict";var ke=I(),We=F(),Ye=X();function $e(s){return i;function i(r,a,t){return ke(a)?We(r,a,t):Ye(r,a,t,s)}}k.exports=$e});var $=u(function(Pr,Y){"use strict";function He(s,i,r){return s[i]=r,!0}Y.exports=He});var K=u(function(Br,J){"use strict";var Je=require("@stdlib/ndarray-base-slice-assign"),Ke=require("@stdlib/assert-is-ndarray-like"),Ze=require("@stdlib/assert-is-number").isPrimitive,er=require("@stdlib/assert-is-integer").isPrimitive,rr=require("@stdlib/assert-is-complex-like"),ir=require("@stdlib/ndarray-base-assert-is-complex-floating-point-data-type"),ar=require("@stdlib/ndarray-base-assert-is-floating-point-data-type"),tr=require("@stdlib/ndarray-base-assert-is-unsigned-integer-data-type"),nr=require("@stdlib/ndarray-base-assert-is-signed-integer-data-type"),H=require("@stdlib/ndarray-base-assert-is-safe-data-type-cast"),sr=require("@stdlib/constants-int8-max"),or=require("@stdlib/constants-int16-max"),ur=require("@stdlib/constants-int32-max"),w=require("@stdlib/ndarray-min-dtype"),lr=require("@stdlib/complex-dtype"),E=require("@stdlib/ndarray-from-scalar"),v=require("@stdlib/string-format"),cr=S(),vr=_();function q(s){return{dtype:s}}function pr(s,i,r,a,t){var n,e,o,p,d;if(!Ke(r))if(o=s.dtype,o==="generic")r=E(r,q(o));else if(Ze(r))if(ar(o))r=E(r,q(o));else if(tr(o))if(e=w(r),H(e,o))r=E(r,q(o));else throw new TypeError(v("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",e,o));else if(nr(o)){if(!er(r))throw new TypeError(v("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",w(r),o));if(r<0?e=w(r):r<=sr?e="int8":r<=or?e="int16":r<=ur?e="int32":e="float64",H(e,o))r=E(r,q(o));else throw new TypeError(v("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",e,o))}else if(o==="binary")if(e=w(r),e==="uint8")r=E(r,q(o));else throw new TypeError(v("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",e,o));else throw new TypeError(v("invalid operation. Unsupported target array data type. Data type: `%s`.",o));else if(rr(r)){if(!ir(o))throw new TypeError(v("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",lr(r),o));r=E(r,q(o))}else throw new TypeError(v("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",typeof r,o));n=!1,d=t(s,i,n);try{return Je(r,a,d,n),!0}catch(A){throw p=vr(A),new p(cr(A.message))}}J.exports=pr});var ee=u(function(jr,Z){"use strict";var dr=I(),fr=$(),Er=K();function qr(s){return i;function i(r,a,t,n){return dr(a)?fr(r,a,t):Er(r,a,t,n,s)}}Z.exports=qr});var oe=u(function(Fr,se){"use strict";var hr=require("@stdlib/utils-define-nonenumerable-read-only-property"),ie=require("@stdlib/ndarray-ctor"),wr=require("@stdlib/utils-inherit"),re=require("@stdlib/proxy-ctor"),ae=b(),te=C(),ne=P(),R=W(),N=ee(),yr=R(ae),gr=N(ae),mr=R(te),Ir=N(te),Sr=R(ne),_r=N(ne);function h(s,i,r,a,t,n,e){var o,p,d;return p=arguments.length,this instanceof h?(ie.call(this,s,i,r,a,t,n,p<7?{}:e),re?(d=r.length,o={},d===0?(o.get=yr,o.set=gr):d===1?(o.get=mr,o.set=Ir):(o.get=Sr,o.set=_r),new re(this,o)):(console.warn("WARNING: Proxy objects are not supported in the current environment. Some `FancyArray` functionality may not be available."),this)):p<7?new h(s,i,r,a,t,n):new h(s,i,r,a,t,n,e)}wr(h,ie);hr(h,"name","ndarray");se.exports=h});var Rr=oe();module.exports=Rr;
/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
