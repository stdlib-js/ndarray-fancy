// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-inherit@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/proxy-ctor@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-trim@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-replace@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-multi@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-str2multislice@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-seq2multislice@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-str2slice@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.1.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-sargs2multislice@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-properties-in@v0.1.0-esm/index.mjs";import{factory as f}from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-slice@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-replace@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-range-error@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-type-error@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-syntax-error@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-slice-assign@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@esm/index.mjs";import{isPrimitive as I}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import{isPrimitive as _}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-complex-like@v0.1.0-esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-complex-floating-point-data-type@esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-floating-point-data-type@esm/index.mjs";import N from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-unsigned-integer-data-type@v0.1.0-esm/index.mjs";import L from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-signed-integer-data-type@v0.1.0-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-safe-data-type-cast@v0.1.0-esm/index.mjs";import U from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-int8-max@v0.1.0-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-int16-max@esm/index.mjs";import C from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-int32-max@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-min-dtype@esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-dtype@esm/index.mjs";import M from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-from-scalar@esm/index.mjs";var q=/^-?[0-9]+$/,B=/:/;function P(e,s){var t,r,m,c;if("S"===(m=(r=i(s))[0])){if(null===(c=l(s)))throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s));c=new o(c)}else if("M"===m){if(null===(c=a(r)))throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s))}else if(q.test(r))c=parseInt(r,10),c=new o(c);else if(B.test(r)){if(t=e.shape,(c=d(r,t,!0)).code){if("ERR_SLICE_INVALID_INCREMENT"===c.code)throw new Error(p("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",s));if("ERR_SLICE_INVALID_ELLIPSIS"===c.code)throw new Error(p("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",s));if("ERR_SLICE_INVALID_SUBSEQUENCE"===c.code)throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s));throw new RangeError(p("invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",t.join(","),n(r,/\.\.\.,/,"").split(",").length))}}else{if(0!==r.length&&"..."!==r)throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s));c=new o}return c}function z(e,s,t){var r,m,c,h;if("S"===(c=(m=i(s))[0])){if(null===(h=l(s)))throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s));h=new o(h)}else if("M"===c){if(null===(h=a(m)))throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s))}else if(q.test(m))h=parseInt(m,10),h=new o(h);else{if(!(m.length>0))throw new RangeError(p("invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",e.shape.join(","),0));if(r=e.shape,(h=d(m,r,!0)).code){if("ERR_SLICE_INVALID_INCREMENT"===h.code)throw new Error(p("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",s));if("ERR_SLICE_INVALID_ELLIPSIS"===h.code)throw new Error(p("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",s));if("ERR_SLICE_INVALID_SUBSEQUENCE"===h.code)throw new Error(p("invalid operation. Unsupported slice operation. Value: `%s`.",s));if("ERR_SLICE_TOO_MANY_DIMENSIONS"===h.code)throw new RangeError(p("invalid operation. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",e.shape.join(","),n(m,/\.\.\.,/,"").split(",").length));if("ERR_SLICE_OUT_OF_BOUNDS"===h.code){if(t)throw new RangeError(p("invalid operation. Slice exceeds array bounds. Array shape: (%s).",r.join(",")));h=d(m,r,!1)}}}return h}function F(e,s,t){var r,n,o;if("M"===(n=i(s))[0]){if(null===(o=a(n)))throw new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",s))}else if(B.test(n)||"..."===n){if(r=e.shape,(o=d(n,r,!0)).code){if("ERR_SLICE_INVALID_INCREMENT"===o.code)throw new Error(c("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",s));if("ERR_SLICE_INVALID_ELLIPSIS"===o.code)throw new Error(c("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",s));if("ERR_SLICE_INVALID_SUBSEQUENCE"===o.code)throw new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",s));if("ERR_SLICE_OUT_OF_BOUNDS"===o.code){if(t)throw new RangeError(c("invalid operation. Slice exceeds array bounds. Array shape: (%s).",r.join(",")));o=d(n,r,!1)}}}else if(null===(o=m(n)))throw new Error(c("invalid operation. Unsupported slice operation. Value: `%s`.",s));return o}var Q=f(h(new s("generic",[0],[],[0],0,u.get("order"))));function k(e){return g(e,/^invalid argument/,"invalid operation")}function G(e){return y(e)?RangeError:b(e)?TypeError:E(e)?SyntaxError:Error}function W(e){return function(s,t,r){if(Q(t))return function(e,s,t){var r=e[s];return j(r)?function(){var s,i;for(s=[],i=0;i<arguments.length;i++)s.push(arguments[i]);return r.apply(this===t?e:this,s)}:r}(s,t,r);return function(e,s,t,r){var i;i=r(e,s,!1);try{return v(t,i,!1,!1)}catch(e){throw new(G(e))(k(e.message))}}(s,t,r,e)}}function Y(e){return{dtype:e}}function $(e){return function(s,t,r,i){if(Q(t))return function(e,s,t){return e[s]=t,!0}(s,t,r);return function(e,s,t,r,i){var n,o,a;if(!x(t))if("generic"===(o=e.dtype))t=M(t,Y(o));else if(I(t))if(A(o))t=M(t,Y(o));else if(N(o)){if(n=T(t),!V(n,o))throw new TypeError(c("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",n,o));t=M(t,Y(o))}else if(L(o)){if(!_(t))throw new TypeError(c("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",T(t),o));if(n=t<0?T(t):t<=U?"int8":t<=D?"int16":t<=C?"int32":"float64",!V(n,o))throw new TypeError(c("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",n,o));t=M(t,Y(o))}else{if("binary"!==o)throw new TypeError(c("invalid operation. Unsupported target array data type. Data type: `%s`.",o));if("uint8"!==(n=T(t)))throw new TypeError(c("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",n,o));t=M(t,Y(o))}else{if(!S(t))throw new TypeError(c("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",typeof t,o));if(!R(o))throw new TypeError(c("invalid operation. Assigned value cannot be safely cast to the target array data type. Data types: [%s, %s].",O(t),o));t=M(t,Y(o))}a=i(e,s,!1);try{return w(t,r,a,!1),!0}catch(e){throw new(G(e))(k(e.message))}}(s,t,r,i,e)}}var H=W(P),J=$(P),K=W(z),X=$(z),Z=W(F),ee=$(F);function se(e,t,i,n,o,a,d){var l,p,m;return p=arguments.length,this instanceof se?(s.call(this,e,t,i,n,o,a,p<7?{}:d),r?(l={},0===(m=i.length)?(l.get=H,l.set=J):1===m?(l.get=K,l.set=X):(l.get=Z,l.set=ee),new r(this,l)):(console.warn("WARNING: Proxy objects are not supported in the current environment. Some `FancyArray` functionality may not be available."),this)):p<7?new se(e,t,i,n,o,a):new se(e,t,i,n,o,a,d)}t(se,s),e(se,"name","ndarray");export{se as default};
//# sourceMappingURL=index.mjs.map
