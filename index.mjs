// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-inherit@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/proxy-ctor@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-trim@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-str2multislice@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-properties-in@v0.1.0-esm/index.mjs";import{factory as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.1.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.1.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-seq2slice@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-str2slice@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-normalize-slice@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-normalize-multi-slice@v0.1.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-vind2bind@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-length@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer@v0.1.0-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zeros@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-seq2multislice@v0.1.0-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-sargs2multislice@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-nonreduced-dimensions@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-shape@v0.1.0-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take@v0.1.0-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.1.0-esm/index.mjs";import I from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-sub2ind@v0.1.0-esm/index.mjs";var R=l(a(new r("generic",[0],[],[0],0,m.get("order"))));var _=/^-?[0-9]+$/;function N(e,r,s){var n,a,l,m,c,p;if(R(r))return a=e[r],t(a)?function(){var r,n;for(r=[],n=0;n<arguments.length;n++)r.push(arguments[n]);return a.apply(this===s?e:this,r)}:a;if(l=i(r),n=e.dtype,c=e.shape,"M"===(m=l[0])){if(null===(p=o(l)))throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r));if(p.ndims!==c.length)throw new RangeError(d("invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",c.join(","),p.ndims))}else if(0!==l.length){if("S"===m||_.test(l))throw new RangeError(d("invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",c.join(","),1));throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r))}return new s.constructor(n,e.data,c,e.strides,e.offset,e.order,{readonly:!0})}function A(e,r,s,n){var t,i;return t=0===(i=s.length)?[0]:b(i),new e(r,v(r,0),s,t,0,n,{readonly:!0})}function U(e,r,s,n,t,i,o,d){var a=d.start;return a===d.stop?A(e,r,[0],o):(i=f(n,t,i,o,a,"throw"),new e(r,s,n=[j(d)],t=[t[0]*d.step],i,o,{readonly:!0}))}function V(e,r,s){var n,a,l,m,j,v,b,g,w,y;if(R(r))return v=e[r],t(v)?function(){var r,n;for(r=[],n=0;n<arguments.length;n++)r.push(arguments[n]);return v.apply(this===s?e:this,r)}:v;if(g=i(r),l=e.dtype,m=e.shape,n=e.strides,a=e.offset,j=e.order,!1,"S"===(w=g[0])){if(null===(y=p(r)))throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r));return(y=h(y,m[0],!0)).code?A(s.constructor,l,[0],j):U(s.constructor,l,e.data,m,n,a,j,y)}if("M"===w){if(null===(y=o(g)))throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r));if(y.ndims!==m.length)throw new RangeError(d("invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",m.join(","),y.ndims));return(y=u(y,m,!0)).code?A(s.constructor,l,[0],j):U(s.constructor,l,e.data,m,n,a,j,y.data[0])}if(_.test(g)){if((y=parseInt(g,10))<0){if((y=m[0]+y)<0)return A(s.constructor,l,[],j)}else if(y>=m[0])return A(s.constructor,l,[],j);return a=f(m,n,a,j,y,"throw"),new s.constructor(l,e.data,[],[0],a,j,{readonly:!0})}if((b=g.split(/\s*,\s*/)).length>1)throw new RangeError(d("invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",m.join(","),b.length));if(0===(g=b[0]).length)throw new RangeError(d("invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",m.join(","),0));if((y=c(g,m[0],!0)).code){if("ERR_SLICE_OUT_OF_BOUNDS"===y.code)return A(s.constructor,l,[],j);if("ERR_SLICE_INVALID_INCREMENT"===y.code)throw new Error(d("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",r));if("ERR_SLICE_INVALID_SUBSEQUENCE"===y.code)throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r))}return U(s.constructor,l,e.data,m,n,a,j,y)}var L=/:/;function C(e,r,s,n){var t,i,o,a,l,m,c,p,h;if(null===n)throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r));if(o=e.dtype,a=e.shape,t=e.strides,i=e.offset,l=e.order,!1,n.ndims!==a.length)throw new RangeError(d("invalid operation. Number of array dimensions does not match the number of slice dimensions. Array shape: (%s). Slice dimensions: %u.",a.join(","),n.ndims));return(h=u(n,a,!0)).code,c=s.constructor,p=E(h),m=y(n),0===S(p)?A(c,o,x(p,m),l):(i=f(a,t,i,l,function(e,r,s,n){var t,i,o;for(t=e.data,i=[r,s,n],o=0;o<t.length;o++)i.push(t[o].start);return i.push("throw"),I.apply(null,i)}(h,a,t,0),"throw"),0===(p=x(p,m)).length?new c(o,e.data,[],[0],i,l,{readonly:!0}):(t=function(e,r,s){var n,t,i,o;for(n=e.data,t=[],i=0;i<s.length;i++)o=s[i],t.push(r[o]*n[o].step);return t}(h,t,m),new c(o,e.data,p,t,i,l,{readonly:!0})))}function D(e,r,s){var n,a,l,m;if(R(r))return a=e[r],t(a)?function(){var r,n;for(r=[],n=0;n<arguments.length;n++)r.push(arguments[n]);return a.apply(this===s?e:this,r)}:a;if(!1,"M"===(l=i(r))[0])return C(e,r,s,o(l));if(L.test(l)){if(n=e.shape,(m=g(l,n,!0)).code){if("ERR_SLICE_OUT_OF_BOUNDS"===m.code)return A(s.constructor,e.dtype,[],e.order);if("ERR_SLICE_INVALID_INCREMENT"===m.code)throw new Error(d("invalid operation. A subsequence increment must be a non-zero integer. Value: `%s`.",r));if("ERR_SLICE_INVALID_ELLIPSIS"===m.code)throw new Error(d("invalid operation. A subsequence may only include a single ellipsis. Value: `%s`.",r));if("ERR_SLICE_INVALID_SUBSEQUENCE"===m.code)throw new Error(d("invalid operation. Unsupported slice operation. Value: `%s`.",r))}return C(e,r,s,m)}return C(e,"["+r+"]",s,w(l))}function O(e,s,t,i,o,d,a){var l,m,c;return m=arguments.length,this instanceof O?(r.call(this,e,s,t,i,o,d,m<7?{}:a),n?(c=t.length,(l={}).get=0===c?N:1===c?V:D,new n(this,l)):(console.warn("WARNING: Proxy objects are not supported in the current environment. Some `FancyArray` functionality may not be available."),this)):m<7?new O(e,s,t,i,o,d):new O(e,s,t,i,o,d,a)}s(O,r),e(O,"name","ndarray");export{O as default};
//# sourceMappingURL=index.mjs.map
